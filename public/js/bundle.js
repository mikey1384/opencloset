// Generated by CoffeeScript 1.6.3
(function() {
  $(function() {
    var pathname;
    Window.prototype._alert = Window.prototype.alert;
    Window.prototype.alert = function(cls, msg) {
      if (!msg) {
        msg = cls;
        cls = 'info';
      }
      $('.main-content').prepend("<div class=\"alert alert-" + cls + "\">" + msg + "</div>");
      return setTimeout(function() {
        return $('.alert').remove();
      }, 3000);
    };
    pathname = location.pathname;
    $('.navbar .nav > li').each(function(i, el) {
      if (pathname === $(el).children('a').attr('href')) {
        return $(el).addClass('active');
      }
    });
    return $('.sidebar li').each(function(i, el) {
      if ($(el).find('li.active').length > 0) {
        return $(el).addClass('active open');
      }
    });
  });

  $.fn.ForceNumericOnly = function() {
    return this.each(function() {
      return $(this).keydown(function(e) {
        var key;
        key = e.charCode || e.keyCode || 0;
        return key === 8 || key === 9 || key === 46 || key === 110 || key === 190 || (key >= 35 && key <= 40) || (key >= 48 && key <= 57) || (key >= 96 && key <= 105);
      });
    });
  };

  $.extend({
    putUrlVars: function(hashes) {
      var key, params, regex, vars;
      vars = '';
      if (hashes.legnth !== 0) {
        params = [];
        regex = /^\d+$/;
        for (key in hashes) {
          if (!regex.test(key)) {
            params.push(key + "=" + hashes[key]);
          }
        }
        vars += params.join("&");
      }
      return vars;
    }
  });

}).call(this);
