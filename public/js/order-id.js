// Generated by CoffeeScript 1.6.3
(function() {
  $(function() {
    var updateOrder;
    updateOrder = function() {
      var order_id;
      order_id = $('#order').data('order-id');
      return $.ajax("/api/order/" + order_id + ".json", {
        type: 'GET',
        success: function(data, textStatus, jqXHR) {
          var compiled;
          $(".order-price").html(OpenCloset.commify(data.price) + '원');
          compiled = _.template($('#tpl-late-fee').html());
          $("#late-fee").html($(compiled(data)));
          return $('#order-late-fee-pay-with').editable({
            source: function() {
              var m, result, _i, _len, _ref;
              result = [];
              _ref = ['현금', '카드', '현금+카드'];
              for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                m = _ref[_i];
                result.push({
                  value: m,
                  text: m
                });
              }
              return result;
            }
          });
        },
        error: function(jqXHR, textStatus, errorThrown) {},
        complete: function(jqXHR, textStatus) {}
      });
    };
    updateOrder();
    $('span.order-status.label').each(function(i, el) {
      return $(el).addClass(OpenCloset.getStatusCss($(el).data('order-detail-status')));
    });
    $('#order-staff-name').editable();
    $('#order-rental-date').editable({
      combodate: {
        minYear: 2013
      }
    });
    $('#order-target-date').editable({
      combodate: {
        minYear: 2013
      },
      success: function(response, newValue) {
        return updateOrder();
      }
    });
    $('#order-price-pay-with').editable({
      source: function() {
        var m, result, _i, _len, _ref;
        result = [];
        _ref = ['현금', '카드', '현금+카드'];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          m = _ref[_i];
          result.push({
            value: m,
            text: m
          });
        }
        return result;
      }
    });
    $('.order-detail').editable();
    $('.order-detail-discount').editable({
      display: function(value, sourceData, response) {
        return $(this).html(OpenCloset.commify(value));
      },
      success: function(response, newValue) {
        return updateOrder();
      }
    });
    $('#order-desc').editable();
    return $('#btn-order-confirm').click(function(e) {
      var order_id, redirect_url, url;
      order_id = $('#order').data('order-id');
      url = $(e.target).data('url');
      redirect_url = $(e.target).data('redirect-url');
      if (!url) {
        return;
      }
      if (!order_id) {
        return;
      }
      return $.ajax("/api/order/" + order_id + ".json", {
        type: 'GET',
        success: function(data, textStatus, jqXHR) {
          if (!data.staff_id) {
            alert('danger', '담당자를 입력하세요.');
            return;
          }
          if (!data.rental_date) {
            alert('danger', '대여일을 입력하세요.');
            return;
          }
          if (!data.target_date) {
            alert('danger', '반납 예정일을 입력하세요.');
            return;
          }
          if (!data.price_pay_with) {
            alert('danger', '대여비 납부 여부를 확인하세요.');
            return;
          }
          return $.ajax(url, {
            type: 'POST',
            data: {
              id: order_id,
              name: 'status_id',
              value: 2,
              pk: order_id
            },
            success: function(data, textStatus, jqXHR) {
              return window.location.href = redirect_url;
            },
            error: function(jqXHR, textStatus, errorThrown) {
              return alert('danger', jqXHR.responseJSON.error);
            },
            complete: function(jqXHR, textStatus) {}
          });
        },
        error: function(jqXHR, textStatus, errorThrown) {},
        complete: function(jqXHR, textStatus) {}
      });
    });
  });

}).call(this);
